@page
@model CustomersModel
@{
    ViewData["Title"] = Model.PageTitle;
}
<h3>@Model.PageTitle</h3>
<div id="app" class="app-cst-mdl1">
    <div class="row">
        <div class="col-sm-12 text-sm-right">
            <a class="btn btn-primary btn-sm mb-2" href="/AddCustomer">Add</a>
        </div>
        <div class="col-sm-12">
            <div class="table-responsive">
                <table class="table">
                    <template v-if="customers.length > 0">
                        <thead>
                            <tr>
                                <th scope="col">#</th>
                                <th scope="col">{{header1}}</th>
                                <th scope="col">{{header2}}</th>
                                <th scope="col">{{header3}}</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="(customer, index) in customers" :key="index">
                                <th scope="row">{{customer.Id}}</th>
                                <td>{{customer.First}}</td>
                                <td>{{customer.Last}}</td>
                                <td>{{customer.Email}}</td>
                                <td>
                                    <template v-if="customer.ContactDetails.length > 0 && customer.AddressDetails.length > 0">
                                        <a v-on:click.prevent="launchModel(customer)" class="mr-2" href="javascript:void"><i class="bi bi-info-square"></i></a>
                                    </template>
                                    <a class="mr-2" :href="'/AddCustomer?id=' + customer.Id + '&handler=Edit'"><i class="bi bi-pencil-square"></i></a>
                                    <a :href="'/Customers?id=' + customer.Id + '&handler=Remove'"><i class="bi bi-trash"></i></a>
                                </td>
                            </tr>
                        </tbody>
                    </template>
                    <template v-else>
                        <tbody>
                            <tr>
                                <td>
                                    <div class="alert alert-success" role="alert">
                                        No records found!
                                    </div>
                                </td>
                            </tr>
                        </tbody>
                    </template>
                </table>
            </div>
        </div>
    </div>
    <div class="modal fade" id="moreDetailModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel" v-if="validateObject(customer)">{{customer.First}} {{customer.Last}}</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <template v-if="validateObject(customer)">
                        <p>Email: {{customer.Email}}</p>
                        <p>Contact Details:</p>
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Type</th>
                                    <th>Phone No</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr v-for="(contact, index) in customer.ContactDetails" :key="index">
                                    <td>{{getText(contact.NumberType)}}</td>
                                    <td>{{contact.PhoneNumber}}</td>
                                </tr>
                            </tbody>
                        </table>
                        <p>Address Details:</p>
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Type</th>
                                    <th>Line 1</th>
                                    <th>City</th>
                                    <th>Pin</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr v-for="(a, index) in customer.AddressDetails" :key="index">
                                    <td>{{getText(a.AddressType)}}</td>
                                    <td>{{a.AddressLine1}}</td>
                                    <td>{{a.City}}</td>
                                    <td>{{a.PinCode}}</td>
                                </tr>
                            </tbody>
                        </table>
                    </template>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button> 
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script type="text/javascript">
       let app = new Vue({
           el: '#app',
           data() {
               return {
                   customers: @Html.Raw(JsonSerializer.Serialize(Model.Customers)),
                   items: @Html.Raw(JsonSerializer.Serialize(Model.SelectListItems)),
                   header1: 'First',
                   header2: 'Last',
                   header3: 'Email',
                   customer: {}
               }
           },
           methods: {
               launchModel: function (d) {
                   this.customer = d;
                   $('#moreDetailModal').modal('show');
               },
               getText: function (v) {
                   let vm = this;
                   let filter = vm.items.filter(function (d) { return d.Value == v });
                   if (filter.length > 0)
                       return filter[0].Text; 
                   return v;
               },
               validateObject(customer) {
                   return Object.keys(customer).length > 0;
               }
           }
       });
        $('#moreDetailModal').on('hidden.bs.modal', function () {
            app.customer = {};
        });
    </script>
}